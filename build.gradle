plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.sagitta'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
    set('registryUsername', "5agitta")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//    implementation 'org.liquibase:liquibase-core'
    implementation 'com.github.loki4j:loki-logback-appender:1.4.2'
//    implementation 'org.springdoc:springdoc-openapi-core:1.1.49'


//    implementation platform('io.micrometer:micrometer-bom:1.11.5')
//    implementation 'io.micrometer:micrometer-observation'
//    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
//    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
//    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.8.0'
//    implementation 'org.webjars:webjars-locator:0.52'
//    implementation 'org.springdoc:springdoc-openapi-webflux-core:1.8.0'
//    implementation 'org.springdoc:springdoc-openapi-ui:1.5.9'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'



//    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    imageName.set("docker.io/${registryUsername}/${project.name}:${project.version}")
}
