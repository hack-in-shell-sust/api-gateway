server:
  port: 8080

spring:
  application:
    name: api-gateway
  profiles:
    active: docker
  datasource:
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        - id: authentication-service
          uri: http://localhost:8684
          metadata:
            public: true
            docs: /api/docs
          predicates:
            - Path=/api/auth/**
          filters:
            - RewritePath=/api/auth/?(?<segment>.*), /auth/$\{segment}
        - id: user-service
          uri: http://localhost:8084
          metadata:
            public: false
            docs: /api/docs
          predicates:
            - Path=/api/user/**
          filters:
            - RewritePath=/api/user/?(?<segment>.*), /users/$\{segment}
        - id: tax-service
          uri: http://localhost:8082
          metadata:
            public: false
            docs: /api/docs
          predicates:
            - Path=/api/tax/**
          filters:
            - RewritePath=/api/tax/?(?<segment>.*), /tax/$\{segment}
management:
  endpoints:
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  tracing:
    sampling:
      probability: 1

logging:
  level:
    root: debug
